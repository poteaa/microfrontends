const { merge } = require('webpack-merge');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const commonConfig = require('./webpack.common');
const ModuleFederationPlugin = require('webpack/lib/container/ModuleFederationPlugin');
const packageJson = require('../package.json');

const devConfig = {
  mode: 'development',
  output: {
    // This option specifies the public URL of the output directory when referenced in a browser.
     // For this project it is not necessary to add the publicPath since it tries to find the main.js
     // in the path where we got the remoteEntry.js, for the auth project it is necessary since we are
     // trying to access signin and signout routes.  
    publicPath: 'http://localhost:8081/'  
  },
  devServer: {
    port: 8081,
    historyApiFallback: {
      index: '/index.html'
    }
  },
  plugins: [
    // Exposing the files, the remoteEntry.js lists different modules that can be loaded form the Markeging project
    new ModuleFederationPlugin({
      name: 'marketing',  // this name is used in the host when adding this remote
      filename: 'remoteEntry.js',  // this is a recommended name, contains a list of files that are available
                                   // from this project  + directions on how to load them
      exposes: {  // allows to share a component, a page or an entire application
        './MarketingApp': './src/bootstrap',  // aliasses:files => we are exposing the modules MarketingApp and if
                                              // anyone tries to import MarketingApp we are giving them src/bootstrap
      },
      shared: packageJson.dependencies, // This is useful when the versions are the same, otherwise we should specify the version. 
                                        // With this we will see a lot of js files but that is not a concern because sometimes
                                        // it is better to have small chunks that load faster
    }),
    new HtmlWebpackPlugin({
      template: './public/index.html' // it adds automatically the scripts generated by webpack to the HTML
    })
  ]
}

module.exports = merge(commonConfig, devConfig);